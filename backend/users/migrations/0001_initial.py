# Generated by Django 4.x on 2023-11-28 14:00

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings
import uuid
import random
import string
from decimal import Decimal



class Migration(migrations.Migration):

    initial = True

    dependencies = [
        #('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('role', models.CharField(blank=True, choices=[('teacher', 'Teacher'), ('student', 'Student')], max_length=10, null=True)),
                ('email_verified', models.BooleanField(default=False)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('avatar_file', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('zoom_access_token', models.CharField(blank=True, null=True)),
                ('zoom_refresh_token', models.CharField(blank=True, null=True)),
                ('zoom_token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FieldOfStudy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=50, primary_key=True, serialize=False)),
                ('bio', models.TextField(blank=True, max_length=600, null=True)),
                ('profile_privet', models.BooleanField(default=True)),
                ('teaching_level', models.CharField(blank=True, choices=[('PRIMARY', 'Primary School'), ('MIDDLE', 'Middle School'), ('SECONDARY', 'Secondary School'), ('HIGHER', 'Higher Education')], max_length=20, null=True)),
                ('teaching_subjects', models.CharField(blank=True, choices=[('رياضيات', 'رياضيات'), ('فيزياء', 'فيزياء'), ('كيمياء', 'كيمياء'), ('أحياء', 'أحياء'), ('فرنسية', 'فرنسية'), ('عربية', 'عربية'), ('إنجليزية', 'إنجليزية'), ('تاريخ', 'تاريخ'), ('جغرافيا', 'جغرافيا'), ('فلسفة', 'فلسفة'), ('اقتصاد', 'اقتصاد')], max_length=20, null=True)),
                ('price', models.IntegerField(default=1000)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('profession', models.CharField(blank=True, max_length=100, null=True)),
                ('degree', models.CharField(blank=True, max_length=100, null=True)),
                ('wilaya', models.CharField(blank=True, max_length=20, null=True)),
                ('university', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('school_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='users.schoollevel')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teaching_level', models.CharField(blank=True, choices=[('PRIMARY', 'Primary School'), ('MIDDLE', 'Middle School'), ('SECONDARY', 'Secondary School'), ('HIGHER', 'Higher Education')], max_length=20, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=10, null=True)),
                ('wilaya', models.CharField(blank=True, max_length=20, null=True)),
                ('field_of_study', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='users.fieldofstudy')),
                ('grade', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='users.grade')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('teacher', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='users.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_history', to='users.teacher')),
            ],
        ),

    ]